plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.21'
    id 'io.qameta.allure' version '2.5'
}

def allureVersion = '2.9.0'

group 'io.github.vananos'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    jcenter()
}

allure {
    autoconfigure = true
    version = '2.9.0'
    clean = true
    reportDir = file("$projectDir/build/allure-report")
    resultsDir = file("$projectDir/build/allure-results")
    downloadLinkFormat = 'https://dl.bintray.com/qameta/maven/io/qameta/allure/allure-commandline/%s/allure-commandline-%<s.zip'
}

test {
    useJUnitPlatform()
    systemProperty 'allure.results.directory', "$projectDir/build/allure-results"
    testLogging {
        events "PASSED", "FAILED", "SKIPPED", "STANDARD_OUT", "STANDARD_ERROR"
    }
    scanForTestClasses = false
    testLogging.showStandardStreams = true
    dependsOn 'cleanTest'
}

dependencies {
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.0.0-alpha-1'
    compile group: 'org.seleniumhq.selenium', name: 'selenium-remote-driver', version: '4.0.0-alpha-1'
    compile 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    compile 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    compile 'org.assertj:assertj-core:3.11.1'
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: '1.3.31'
    compile 'org.apache.logging.log4j:log4j-api:2.11.2'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.2'
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.11.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile('io.qameta.allure:allure-junit5:2.10.0')
    compile('ru.yandex.qatools.ashot:ashot:1.5.2')
    testCompile("org.junit.jupiter:junit-jupiter-params:5.4.2")
    testCompile("io.qameta.allure:allure-java-commons:$allureVersion")
    testCompile("io.qameta.allure:allure-attachments:$allureVersion")
    testCompile("io.qameta.allure:allure-generator:$allureVersion")
    testCompile("io.qameta.allure:allure-httpclient:$allureVersion")
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}